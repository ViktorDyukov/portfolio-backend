# Generated by Django 3.2 on 2021-04-25 02:35

import app2021.models
from django.db import migrations, models
import django.db.models.deletion
import martor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=90)),
                ('bg_color', models.CharField(default='#666666', max_length=7)),
                ('preview_deskX2', models.ImageField(default=' ', upload_to='images/', validators=[app2021.models.prevImage_restriction])),
                ('date', models.CharField(max_length=40, null=True)),
                ('c1_title', models.CharField(default='About company', max_length=30)),
                ('c1_body', martor.models.MartorField(null=True)),
                ('c2_title', models.CharField(default='My role', max_length=30)),
                ('c2_body', martor.models.MartorField(null=True)),
                ('c3_title', models.CharField(default='Project steps', max_length=30)),
                ('c3_body', martor.models.MartorField(null=True)),
                ('c4_title', models.CharField(default='Results', max_length=30)),
                ('c4_body', martor.models.MartorField(null=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Customisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('intro_header', models.TextField(default='', max_length=100)),
                ('intro_description', models.TextField(default='', max_length=300)),
                ('highlight', models.ManyToManyField(to='app2021.Case')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(default='', max_length=100)),
                ('body', martor.models.MartorField(null=True)),
                ('url', models.CharField(default='', max_length=25, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('link_ext', models.CharField(default=app2021.models.random_string, max_length=3)),
                ('opened', models.IntegerField()),
                ('customisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app2021.customisation')),
            ],
        ),
        migrations.CreateModel(
            name='CaseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageX2', models.ImageField(default='', upload_to='images/', validators=[app2021.models.caseImage_restriction])),
                ('order', models.PositiveIntegerField(default=0)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app2021.case')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='case',
            name='tag',
            field=models.ManyToManyField(to='app2021.Tag'),
        ),
    ]
